<Page x:Class="ProductManagmentUserPanel.Views.ProductListView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProductManagmentUserPanel.Views"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ProductListView">

    <Page.Resources>
        <local:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter"/>
        <Style x:Key="ProductItemStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="4" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="1"
                     CornerRadius="8"
                     Padding="{TemplateBinding Padding}">
                            <Border.RenderTransform>
                                <TranslateTransform/>
                            </Border.RenderTransform>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="LightGray" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                                  To="-5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="White" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                                  To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                            <Grid>
                                <ContentPresenter ContentSource="Content"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{x:Null}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>

                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                         Storyboard.TargetProperty="Width"
                         To="34"
                         Duration="0:0:0.3"/>
                                <DoubleAnimation
                         Storyboard.TargetProperty="Height"
                         To="32"
                         Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                         Storyboard.TargetProperty="Width"
                         To="30"
                         Duration="0:0:0.5"/>
                                <DoubleAnimation
                         Storyboard.TargetProperty="Height"
                         To="30"
                         Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>



    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="5*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" >
            <TextBox Width="400" Height="30" Margin="0,0,10,0"  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
            <Button Width="30" Height="30" Style="{StaticResource IconButtonStyle}">
                <materialDesign:PackIcon Kind="Magnify" Width="20" Height="20"/>
            </Button>
            <Button Width="30" Height="30" Margin="10,0,0,0" Style="{StaticResource IconButtonStyle}">
                <materialDesign:PackIcon Kind="Close" Width="20" Height="20"/>
            </Button>
        </StackPanel>
        <ListView Grid.Row="1" ItemsSource="{Binding Products}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,0,0,0"
               ScrollViewer.HorizontalScrollBarVisibility="Auto"
               ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource ProductItemStyle}">
                        <Grid Width="200" Height="300" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Image Source="{Binding Photo.Bytes, Converter={StaticResource ByteArrayToImageConverter}}"
                Width="150" Height="150" HorizontalAlignment="Center" VerticalAlignment="Center"
                Margin="0,20,0,0"/>

                            <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30"
                 Margin="10" Style="{StaticResource IconButtonStyle}">
                                <materialDesign:PackIcon Kind="CardsHeartOutline" Width="20" Height="20" Foreground="MediumPurple" />
                            </Button>

                            <StackPanel Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,0,10" Orientation="Horizontal">
                                
                                    <TextBlock Text="{Binding Name}" Background="Transparent" Padding="5,2" Margin="0,0,5,0" FontWeight="Bold" FontSize="14"/>
                                <TextBlock Padding="5,2" Margin="0,0,5,0" FontSize="14">
                                    <TextBlock.Inlines>
                                        <Run Text="{Binding Price}" />
                                        <Run Text=" manat" />
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <Button Style="{StaticResource IconButtonStyle}" Command="{Binding DataContext.AddCartList, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}">
                                    <materialDesign:PackIcon Kind="CartOutline" Foreground="MediumPurple" Width="20" Height="20"/>

                                </Button>

                            </StackPanel>
                        </Grid>
                    </Border>
                </DataTemplate>

            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
