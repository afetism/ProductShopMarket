<Window x:Class="ProductManagmentUserPanel.Views.MainUserView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProductManagmentUserPanel.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainUserView" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True"
        Background="#ECF0F1" Height="720" Width="1080">
       <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <local:NullToVisibilityConverter x:Key="NullToVis"/>
        <local:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter"/>
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="IconCircleButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="25">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
      <Border Background="#eff2f7" CornerRadius="30" MouseDown="Border_MouseDown" MouseLeftButtonDown="Border_MouseLeftButtonDown">
         <Grid>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="80">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                        <GradientStop Color="MediumPurple" Offset="0" />
                        <GradientStop Color="#2C386C" Offset="1" />
                    </LinearGradientBrush>
                </Grid.Background>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Appolina Shop" FontSize="24" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="White"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <Button Style="{StaticResource IconCircleButtonStyle}">
                        <Border Width="50" Height="50" BorderBrush="Transparent" BorderThickness="2" Background="Transparent">
                            <Grid>
                                <Grid.Clip>
                                    <EllipseGeometry RadiusX="25" RadiusY="25" Center="25,25" />
                                </Grid.Clip>
                                <Image Source="{Binding PhotoPath}" Stretch="UniformToFill" />
                            </Grid>
                        </Border>
                    </Button>
                    <Button Style="{StaticResource IconButtonStyle}">
                        <materialDesign:PackIcon Kind="CardsHeartOutline" Width="40" Height="30" Foreground="White" />
                    </Button>
                    <Button Style="{StaticResource IconButtonStyle}" Command="{Binding DataContext.ShowCart, RelativeSource={RelativeSource AncestorType=StackPanel}}" >
                        <materialDesign:PackIcon Kind="CartOutline" Width="40" Height="30" />
                    </Button>
                    <Button Style="{StaticResource IconButtonStyle}" Click="Button_Click">
                        <materialDesign:PackIcon Kind="LogoutVariant" Width="40" Height="30"/>
                    </Button>
                </StackPanel>
            </Grid>

            <StackPanel Orientation="Horizontal" Width="900" Height="100" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,80,0,0">
                <Button Style="{StaticResource IconButtonStyle}" Command="{Binding OpenPopupMenu}">
                    <materialDesign:PackIcon Kind="FormatListBulleted" Width="50" Height="50" Foreground="MediumPurple" />
                </Button>
               


            </StackPanel>
         
            <Popup IsOpen="{Binding IsOpenPopupMenu}" Placement="Center" PlacementTarget="{Binding ElementName=rootGrid}" AllowsTransparency="True">
                <Border Background="White" BorderBrush="LightGray" BorderThickness="1" CornerRadius="20">
                    <StackPanel Orientation="Vertical" Width="320" materialDesign:ShadowAssist.Darken="True" Margin="20">
                        <TextBlock HorizontalAlignment="Center" Foreground="Red" FontSize="24" Text="Add Filter"/>
                        <StackPanel Margin="0 15 0 0">

                            <TextBlock VerticalAlignment="Center" Foreground="#B0B9C6"
               IsHitTestVisible="False" Panel.ZIndex="1" Text="Filter by Category"
               Visibility="{Binding ElementName=comboBoxFilter, Path=SelectedItem, Converter={StaticResource NullToVis}}" />

                            <ComboBox  x:Name="comboBoxFilter" ItemsSource="{Binding Categories}" DisplayMemberPath="Name" Foreground="Black" SelectedItem="{Binding Category, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="80,20"
                             Visibility="{Binding IsRangeSelected, Converter={StaticResource BoolToVis}}">
                                <TextBox Text="{Binding MinPrice}" Width="50" />
                                <TextBlock>------</TextBlock>
                                <TextBox Text="{Binding MaxPrice}" Width="50" />
                            </StackPanel>
                            
                            <TextBlock  VerticalAlignment="Center" Foreground="#B0B9C6"
                             IsHitTestVisible="False" Panel.ZIndex="1" Text="Filter by Category"
                             Visibility="{Binding ElementName=comboBoxFilter1, Path=SelectedItem, Converter={StaticResource NullToVis}}" />
                           
                            <ComboBox x:Name="comboBoxFilter1" ItemsSource="{Binding RangePrices}" DisplayMemberPath="" Foreground="Black" SelectedItem="{Binding RangePrice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <CheckBox Content="Clear All Filters" IsChecked="{Binding IsCheck, UpdateSourceTrigger=PropertyChanged}"
          Margin="0 15 0 0"
          IsHitTestVisible="True" />
                            
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 20 0 0">
                            <Button Style="{StaticResource Crud}" Width="80" Background="ForestGreen" HorizontalAlignment="Center" Command="{Binding ShowList}"  Content="ShowList" Margin="0 0 15 0"/>
                            <Button Style="{StaticResource Crud}" Width="80" Background="OrangeRed" HorizontalAlignment="Center" Command="{Binding ClosePopupMenu}" Content="Close"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>


            

            <Frame x:Name="ContentFrame" Content="{Binding CurrentPage}" Margin="80,100,34,30" NavigationUIVisibility="Hidden"  />
            
        </Grid>
    </Border>
</Window>
